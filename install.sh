#!/bin/bash
# AutoClaude Installation Script
# Installs the autoclaude command globally

set -euo pipefail

echo "🚀 AutoClaude Installer"
echo "====================="
echo ""

# Check if running with appropriate permissions
if [ "$EUID" -eq 0 ] && [ -z "${SUDO_USER:-}" ]; then
    echo "❌ Please don't run this script directly as root"
    echo "   Use: ./install.sh (without sudo)"
    exit 1
fi

# Determine installation directory
if [ -w "/usr/local/bin" ]; then
    INSTALL_DIR="/usr/local/bin"
    NEED_SUDO=false
elif command -v sudo &> /dev/null; then
    INSTALL_DIR="/usr/local/bin"
    NEED_SUDO=true
else
    # Fall back to user's local bin
    INSTALL_DIR="$HOME/.local/bin"
    NEED_SUDO=false
    mkdir -p "$INSTALL_DIR"
    
    # Check if local bin is in PATH
    if [[ ":$PATH:" != *":$INSTALL_DIR:"* ]]; then
        echo "⚠️  $INSTALL_DIR is not in your PATH"
        echo "   Add this to your shell profile:"
        echo "   export PATH=\"\$PATH:$INSTALL_DIR\""
        echo ""
    fi
fi

# Get the directory where this script is located
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Create wrapper script
WRAPPER_SCRIPT="/tmp/autoclaude-wrapper"
cat > "$WRAPPER_SCRIPT" << EOF
#!/bin/bash
# AutoClaude wrapper script
# Auto-generated by install.sh

# Always use the global installation
AUTOCLAUDE_HOME="$SCRIPT_DIR"
export AUTOCLAUDE_HOME

# Change to AutoClaude directory for relative paths to work
cd "\$AUTOCLAUDE_HOME"

# Execute the main script
exec ./autoclaude.sh "\$@"
EOF

chmod +x "$WRAPPER_SCRIPT"

# Install the wrapper
echo "Installing autoclaude command to $INSTALL_DIR..."

if [ "$NEED_SUDO" = true ]; then
    sudo cp "$WRAPPER_SCRIPT" "$INSTALL_DIR/autoclaude"
    sudo chmod +x "$INSTALL_DIR/autoclaude"
    sudo cp "$SCRIPT_DIR/autoclaude-manage-secrets" "$INSTALL_DIR/autoclaude-manage-secrets"
    sudo chmod +x "$INSTALL_DIR/autoclaude-manage-secrets"
else
    cp "$WRAPPER_SCRIPT" "$INSTALL_DIR/autoclaude"
    chmod +x "$INSTALL_DIR/autoclaude"
    cp "$SCRIPT_DIR/autoclaude-manage-secrets" "$INSTALL_DIR/autoclaude-manage-secrets"
    chmod +x "$INSTALL_DIR/autoclaude-manage-secrets"
fi

# Clean up
rm -f "$WRAPPER_SCRIPT"

# Create config directory
mkdir -p "$HOME/.autoclaude"

# Check if config exists
if [ ! -f "$HOME/.autoclaude/config" ]; then
    echo "Creating default configuration..."
    cat > "$HOME/.autoclaude/config" << EOF
# AutoClaude Configuration
AUTOCLAUDE_WORKSPACE="$HOME/autoclaude-projects"
AUTOCLAUDE_DEFAULT_RUNTIME="auto"
AUTOCLAUDE_AUTO_COMMIT="true"
AUTOCLAUDE_USE_SANDBOX="true"
EOF
fi

# Create workspace directory if it doesn't exist
if [ ! -d "$HOME/autoclaude-projects" ]; then
    mkdir -p "$HOME/autoclaude-projects"
fi

# Check dependencies
echo ""
echo "Checking dependencies..."

# Claude Code
if command -v claude &> /dev/null; then
    echo "✅ Claude Code found"
else
    echo "❌ Claude Code not found"
    echo "   Install with: npm install -g @anthropic-ai/claude-code"
fi

# Container runtime
if command -v docker &> /dev/null; then
    echo "✅ Docker found"
elif command -v podman &> /dev/null; then
    echo "✅ Podman found"
else
    echo "⚠️  No container runtime found"
    echo "   Install Docker or Podman for sandbox features"
fi

# Git
if command -v git &> /dev/null; then
    echo "✅ Git found"
else
    echo "❌ Git not found"
    echo "   Please install Git"
fi

# Success message
echo ""
echo "✅ AutoClaude installed successfully!"
echo ""
echo "You can now use the 'autoclaude' command from anywhere."
echo ""
echo "Quick start:"
echo "  autoclaude              # Launch interactive menu"
echo "  autoclaude new          # Create new project"
echo "  autoclaude help         # Show help"
echo ""
echo "First time setup:"
echo "  1. Set your API key: export ANTHROPIC_API_KEY='your-key'"
echo "  2. Run: autoclaude"
echo "  3. Select 'Setup AutoClaude' from the menu"
echo ""

# Create uninstall script
cat > "$SCRIPT_DIR/uninstall.sh" << 'EOF'
#!/bin/bash
# AutoClaude Uninstaller

echo "Uninstalling AutoClaude..."

# Remove command
if [ -f "/usr/local/bin/autoclaude" ]; then
    sudo rm -f "/usr/local/bin/autoclaude"
elif [ -f "$HOME/.local/bin/autoclaude" ]; then
    rm -f "$HOME/.local/bin/autoclaude"
fi

# Ask about config
read -p "Remove configuration files? (y/n): " remove_config
if [[ "$remove_config" =~ ^[Yy]$ ]]; then
    rm -rf "$HOME/.autoclaude"
fi

echo "✅ AutoClaude uninstalled"
EOF

chmod +x "$SCRIPT_DIR/uninstall.sh"

echo "To uninstall later, run: ./uninstall.sh"